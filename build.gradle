plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
//	id("org.asciidoctor.jvm.pdf") version "3.2.0"
//	id("org.asciidoctor.jvm.gems") version "3.2.0"
}

group = 'roadtree'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//db
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'mysql:mysql-connector-java'
	implementation 'com.h2database:h2'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//rest docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}


tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

ext{
	snippetsDir = file('build/generated-snippets')
}

asciidoctor{
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
	baseDirFollowsSourceFile()
}
test{
	outputs.dir snippetsDir
	useJUnitPlatform()

}
bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}